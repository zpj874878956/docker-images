# 工作流名称
name: Publish Docker image
# 触发工作流的事件，这里表示发布新版本时触发
on:
  release:
    types: [published]
# 工作流程
jobs:
  push_to_registry:
    name: Push Docker image to multiple registries
    # 工作流运行的机器环境
    runs-on:
      ubuntu-latest
    # 设置工作流程的权限
    permissions:
      packages: write
      contents: read
    # 步骤
    steps:
      # 检出仓库
      - name: Check out the repo
        uses: actions/checkout@v4
      # 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # 登录到 GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # GitHub Actions 会默认提供一个特殊的 Token (GITHUB_TOKEN)，用于执行工作流程中的操作，包括登录到容器注册表
          password: ${{ secrets.GITHUB_TOKEN }}
      # 提取 Docker 的元数据（标签、标签）
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            imsyy/splayer
            ghcr.io/${{ github.repository }}
      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Docker 上下文路径，表示 Dockerfile 所在的目录为当前目录
          file: ./Dockerfile # Dockerfile 文件的路径
          push: true # 设置为 true 表示构建完成后推送 Docker 镜像到镜像仓库
          tags: ${{ steps.meta.outputs.tags }} # 使用 metadata-action 输出的标签作为 Docker 镜像的标签
          labels: ${{ steps.meta.outputs.labels }} # 使用 metadata-action 输出的标签作为 Docker 镜像的标签